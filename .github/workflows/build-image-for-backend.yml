---
name: build-image-for-backend
run-name: Build and Push docker image for backend
on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  # linux_arm64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get backend version
  #       id: get_version
  #       run: |
  #         echo "Backend version: $(cat version.txt)"
  #         echo "::set-output name=backend_version::$(cat version.txt)"

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push Docker image
  #       env:
  #         BACKEND_VERSION: ${{ steps.get_version.outputs.backend_version }}
  #       run: |
  #         echo "Backend version is $BACKEND_VERSION"

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: axelnemes/msc-onlab-backend:v1.0.0

  linux_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Get backend version
        id: get_version
        run: |
          echo "Backend version: $(cat version.txt)"
          echo "::set-output name=backend_version::$(cat version.txt)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Print Docker Hub username
        run: 'echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"'

      - name: Print Docker Hub token
        run: 'echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}"'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          BACKEND_VERSION: ${{ steps.get_version.outputs.backend_version }}
        run: |
          echo "Backend version is $BACKEND_VERSION"
